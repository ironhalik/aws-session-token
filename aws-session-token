_test_completions() {
  local prev profiles
  COMPREPLY=($(compgen -W "--profile --token" -- "${COMP_WORDS[${COMP_CWORD}]}"))

  prev="${COMP_WORDS[COMP_CWORD-1]}"
  profiles=$(cat ~/.aws/config | grep -o '\[[^]]*\]' | tr -d '[]' | sed 's/profile //')

  if [[ "${prev}" == "--profile" ]]; then
    COMPREPLY=($(compgen -W "${profiles}" -- "${COMP_WORDS[${COMP_CWORD}]}"))
  fi
}

complete -F _test_completions aws-session-token

aws-session-token() {
  usage() {
    echo "Generates and sets AWS session token when using awscli with MFA."
    echo "You need to provide AWS profile name (as defined in ~/.aws/config)"
    echo "and OTP token generated by your MFA device."
    echo ""
    echo "Usage:"
    echo "  ${FUNCNAME[1]} --profile <aws-profile> --token <token>"
    echo "  ${FUNCNAME[1]} <aws-profile> <token>"
    echo "  AWS_PROFILE=<aws-profile> ${FUNCNAME[1]} --token <token>"
    echo "  AWS_PROFILE=<aws-profile> ${FUNCNAME[1]} <token>"
  }

  local profile token args

  while [ "$1" != "" ]; do
    case $1 in
      -p | --profile ) shift; profile="${1}";;
      -t | --token ) shift; token="${1}";;
      -h | --help ) usage; return 1;;
      * ) args="$args $1"
    esac
    shift
  done

  if [ -z $profile ] && [ -z $token ]; then
    set -- $args
    profile=$1
    token=$2
  fi

  if ! which -s jq; then echo "Missing: jq. Try: brew install jq"; return 1; fi
  if ! which -s aws; then echo "Missing: aws. Try: pip install awscli"; return 1; fi

  if [ -z $profile ]; then profile=$AWS_PROFILE; fi
  if [ -z $profile ]; then echo "Missing AWS profile. Either provide it via AWS_PROFILE env var or --profile"; return 1; fi
  if [ -z $token ]; then echo "Missing token. Provide it via --token"; return 1; fi

  local caller_data=$(aws --profile=$profile sts get-caller-identity)
  if [ $? -gt 0 ]; then echo "Unable to get caller identity."; return 1; fi

  local caller_user=$(basename $(jq -r .'Arn' <<< ${caller_data}))
  local caller_account=$(jq -r .'Account' <<< ${caller_data})
  local sts_credentials=$(aws --profile=$profile sts get-session-token --serial-number "arn:aws:iam::${caller_account}:mfa/${caller_user}" --token-code ${token})
  if [ $? -gt 0 ]; then echo "Unable to get session token."; return 1; fi

  if [ ! -z "$sts_credentials" ]; then
    export AWS_PROFILE=$profile
    export AWS_ACCESS_KEY_ID=$(jq -r .Credentials.AccessKeyId <<< ${sts_credentials})
    export AWS_SECRET_ACCESS_KEY=$(jq -r .Credentials.SecretAccessKey <<< ${sts_credentials})
    export AWS_SESSION_TOKEN=$(jq -r .Credentials.SessionToken <<< ${sts_credentials})
    echo "Session with $profile opened."
  else
    echo "Something failed."
    return 1
  fi
}
